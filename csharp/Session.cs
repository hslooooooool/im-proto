// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Session.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Vip.Qsos.Im.Lib.Model.Proto {

  /// <summary>Holder for reflection information generated from Session.proto</summary>
  public static partial class SessionReflection {

    #region Descriptor
    /// <summary>File descriptor for Session.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TZXNzaW9uLnByb3RvEht2aXAucXNvcy5pbS5saWIubW9kZWwucHJvdG8i",
            "iwIKBU1vZGVsEgoKAmlkGAEgASgDEg8KB2FjY291bnQYAiABKAkSCwoDbmlk",
            "GAMgASgJEhAKCGRldmljZUlkGAQgASgJEgwKBGhvc3QYBSABKAkSDwoHY2hh",
            "bm5lbBgGIAEoCRITCgtkZXZpY2VNb2RlbBgHIAEoCRIVCg1jbGllbnRWZXJz",
            "aW9uGAggASgJEhUKDXN5c3RlbVZlcnNpb24YCSABKAkSEAoIYmluZFRpbWUY",
            "CiABKAMSEQoJbG9uZ2l0dWRlGAsgASgBEhAKCGxhdGl0dWRlGAwgASgBEhAK",
            "CGxvY2F0aW9uGA0gASgJEgwKBGFwbnMYDiABKAUSDQoFc3RhdGUYDyABKAVC",
            "EEIMU2Vzc2lvblByb3RvSANiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Vip.Qsos.Im.Lib.Model.Proto.Model), global::Vip.Qsos.Im.Lib.Model.Proto.Model.Parser, new[]{ "Id", "Account", "Nid", "DeviceId", "Host", "Channel", "DeviceModel", "ClientVersion", "SystemVersion", "BindTime", "Longitude", "Latitude", "Location", "Apns", "State" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///消息会话包装类
  /// </summary>
  public sealed partial class Model : pb::IMessage<Model> {
    private static readonly pb::MessageParser<Model> _parser = new pb::MessageParser<Model>(() => new Model());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Model> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Vip.Qsos.Im.Lib.Model.Proto.SessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Model() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Model(Model other) : this() {
      id_ = other.id_;
      account_ = other.account_;
      nid_ = other.nid_;
      deviceId_ = other.deviceId_;
      host_ = other.host_;
      channel_ = other.channel_;
      deviceModel_ = other.deviceModel_;
      clientVersion_ = other.clientVersion_;
      systemVersion_ = other.systemVersion_;
      bindTime_ = other.bindTime_;
      longitude_ = other.longitude_;
      latitude_ = other.latitude_;
      location_ = other.location_;
      apns_ = other.apns_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Model Clone() {
      return new Model(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    /// <summary>
    ///数据库主键ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private string account_ = "";
    /// <summary>
    ///session绑定的用户账号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Account {
      get { return account_; }
      set {
        account_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nid" field.</summary>
    public const int NidFieldNumber = 3;
    private string nid_ = "";
    /// <summary>
    ///session在本台服务器上的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nid {
      get { return nid_; }
      set {
        nid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 4;
    private string deviceId_ = "";
    /// <summary>
    ///客户端 ID (设备号码+应用包名),ios为 device token 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 5;
    private string host_ = "";
    /// <summary>
    ///session绑定的服务器IP
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 6;
    private string channel_ = "";
    /// <summary>
    ///客户端设备类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceModel" field.</summary>
    public const int DeviceModelFieldNumber = 7;
    private string deviceModel_ = "";
    /// <summary>
    ///客户端设备型号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceModel {
      get { return deviceModel_; }
      set {
        deviceModel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "clientVersion" field.</summary>
    public const int ClientVersionFieldNumber = 8;
    private string clientVersion_ = "";
    /// <summary>
    ///客户端应用版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientVersion {
      get { return clientVersion_; }
      set {
        clientVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "systemVersion" field.</summary>
    public const int SystemVersionFieldNumber = 9;
    private string systemVersion_ = "";
    /// <summary>
    ///客户端系统版本
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SystemVersion {
      get { return systemVersion_; }
      set {
        systemVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bindTime" field.</summary>
    public const int BindTimeFieldNumber = 10;
    private long bindTime_;
    /// <summary>
    ///客户端登录时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BindTime {
      get { return bindTime_; }
      set {
        bindTime_ = value;
      }
    }

    /// <summary>Field number for the "longitude" field.</summary>
    public const int LongitudeFieldNumber = 11;
    private double longitude_;
    /// <summary>
    ///客户端经度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "latitude" field.</summary>
    public const int LatitudeFieldNumber = 12;
    private double latitude_;
    /// <summary>
    ///客户端维度
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 13;
    private string location_ = "";
    /// <summary>
    ///客户端位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "apns" field.</summary>
    public const int ApnsFieldNumber = 14;
    private int apns_;
    /// <summary>
    ///apns推送状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Apns {
      get { return apns_; }
      set {
        apns_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 15;
    private int state_;
    /// <summary>
    ///客户端在线状态
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Model);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Model other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Account != other.Account) return false;
      if (Nid != other.Nid) return false;
      if (DeviceId != other.DeviceId) return false;
      if (Host != other.Host) return false;
      if (Channel != other.Channel) return false;
      if (DeviceModel != other.DeviceModel) return false;
      if (ClientVersion != other.ClientVersion) return false;
      if (SystemVersion != other.SystemVersion) return false;
      if (BindTime != other.BindTime) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (Location != other.Location) return false;
      if (Apns != other.Apns) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Account.Length != 0) hash ^= Account.GetHashCode();
      if (Nid.Length != 0) hash ^= Nid.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (DeviceModel.Length != 0) hash ^= DeviceModel.GetHashCode();
      if (ClientVersion.Length != 0) hash ^= ClientVersion.GetHashCode();
      if (SystemVersion.Length != 0) hash ^= SystemVersion.GetHashCode();
      if (BindTime != 0L) hash ^= BindTime.GetHashCode();
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (Apns != 0) hash ^= Apns.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Account.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Account);
      }
      if (Nid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Nid);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DeviceId);
      }
      if (Host.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Host);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Channel);
      }
      if (DeviceModel.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DeviceModel);
      }
      if (ClientVersion.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ClientVersion);
      }
      if (SystemVersion.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SystemVersion);
      }
      if (BindTime != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(BindTime);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Longitude);
      }
      if (Latitude != 0D) {
        output.WriteRawTag(97);
        output.WriteDouble(Latitude);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Location);
      }
      if (Apns != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(Apns);
      }
      if (State != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Account.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Account);
      }
      if (Nid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nid);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (DeviceModel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceModel);
      }
      if (ClientVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientVersion);
      }
      if (SystemVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SystemVersion);
      }
      if (BindTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BindTime);
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (Apns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Apns);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Model other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Account.Length != 0) {
        Account = other.Account;
      }
      if (other.Nid.Length != 0) {
        Nid = other.Nid;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.DeviceModel.Length != 0) {
        DeviceModel = other.DeviceModel;
      }
      if (other.ClientVersion.Length != 0) {
        ClientVersion = other.ClientVersion;
      }
      if (other.SystemVersion.Length != 0) {
        SystemVersion = other.SystemVersion;
      }
      if (other.BindTime != 0L) {
        BindTime = other.BindTime;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.Apns != 0) {
        Apns = other.Apns;
      }
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Account = input.ReadString();
            break;
          }
          case 26: {
            Nid = input.ReadString();
            break;
          }
          case 34: {
            DeviceId = input.ReadString();
            break;
          }
          case 42: {
            Host = input.ReadString();
            break;
          }
          case 50: {
            Channel = input.ReadString();
            break;
          }
          case 58: {
            DeviceModel = input.ReadString();
            break;
          }
          case 66: {
            ClientVersion = input.ReadString();
            break;
          }
          case 74: {
            SystemVersion = input.ReadString();
            break;
          }
          case 80: {
            BindTime = input.ReadInt64();
            break;
          }
          case 89: {
            Longitude = input.ReadDouble();
            break;
          }
          case 97: {
            Latitude = input.ReadDouble();
            break;
          }
          case 106: {
            Location = input.ReadString();
            break;
          }
          case 112: {
            Apns = input.ReadInt32();
            break;
          }
          case 120: {
            State = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
